import pandas as pd
import matplotlib.pyplot as plt

# Function to read test and label files
def read_data(test_file, label_file):
    test_data = pd.read_csv(test_file)
    label_data = pd.read_csv(label_file)
    return test_data, label_data

# Function to draw time series plots with anomaly regions
def plot_with_anomalies(test_data, label_data):
    plt.figure(figsize=(12, 6))
    plt.plot(test_data.index, test_data.values, label='Time Series Data')
    for i, row in label_data.iterrows():
        plt.axvspan(row['start_timestamp'], row['end_timestamp'], color='red', alpha=0.3, label='Anomaly Region')
    plt.xlabel('Time')
    plt.ylabel('Value')
    plt.title('Time Series Data with Anomaly Regions')
    plt.legend()
    plt.show()

# Function to perform EDA and find out root cause
def eda_and_root_cause(test_data, label_data):
    # Perform exploratory data analysis
    # Here you can analyze statistics, distributions, correlations, etc.
    
    # Find out the root cause for the anomaly
    # You can use statistical methods, machine learning algorithms, or domain knowledge to identify the root cause

    # For example, if there's a sudden spike in a certain variable coinciding with anomalies,
    # that variable could be a potential root cause.

    root_cause_variables = []  # Placeholder for root cause variables
    return root_cause_variables

# Example usage
if __name__ == "__main__":
    # File names
    test_files = ["test.csv", "smap_test.csv", "msl_test.csv", "psm_test.csv"]
    label_files = ["test_labels.csv", "smap_test_labels.csv", "msl_test_labels.csv", "psm_test_labels.csv"]

    for i in range(len(test_files)):
        print(f"Processing {test_files[i]}...")
        # Read data
        test_data, label_data = read_data(test_files[i], label_files[i])

        # Plot time series with anomalies
        plot_with_anomalies(test_data, label_data)

        # Perform EDA and find root cause
        root_cause_variables = eda_and_root_cause(test_data, label_data)
        print("Root cause variables:", root_cause_variables)
